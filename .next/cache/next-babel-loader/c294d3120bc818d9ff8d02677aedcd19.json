{"ast":null,"code":"var _jsxFileName = \"/Users/ahb/code/personal-site-v2/pages/books.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Title from \"../components/Title\";\nimport PageBorder from \"../components/PageBorder\";\n\nfunction Books(_ref) {\n  var _this = this;\n\n  var books = _ref.books;\n  return __jsx(PageBorder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Books\"), (books === null || books === void 0 ? void 0 : books.length) ? __jsx(\"ul\", {\n    className: \"pl-6 list-disc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, books.map(function (_ref2) {\n    var title = _ref2.title,\n        timestamp = _ref2.timestamp;\n    return __jsx(Link, {\n      href: \"/books/\".concat(title),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, __jsx(\"li\", {\n      className: \"tracking-wider text-gray-700 text-lighter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, title, \" \", __jsx(\"span\", {\n      className: \"text-xs text-gray-400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, new Date(timestamp).toDateString())));\n  })) : __jsx(\"p\", {\n    className: \"tracking-wider text-gray-700 text-lighter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Nothing here yet. Check back soon, I guess.\"));\n}\n\n_c = Books;\nexport var __N_SSP = true;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/ahb/code/personal-site-v2/pages/books.tsx"],"names":["Title","PageBorder","Books","books","length","map","title","timestamp","Date","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,SAASC,KAAT,OAA0B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACxB,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,MAAP,IACC;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,SAAV,SAAUA,SAAV;AAAA,WACT,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYD,KAAZ,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,2CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,EACU,GADV,EAEE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,IAAIE,IAAJ,CAASD,SAAT,EAAoBE,YAApB,EADH,CAFF,CADF,CADS;AAAA,GAAV,CADH,CADD,GAcC;AAAG,IAAA,SAAS,EAAC,2CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAhBJ,CADF;AAuBD;;KAxBQP,K;;AAwCT,eAAeA,KAAf","sourcesContent":["import Title from \"../components/Title\";\nimport PageBorder from \"../components/PageBorder\";\nimport fs from \"fs\";\n\nfunction Books({ books }) {\n  return (\n    <PageBorder>\n      <Title>Books</Title>\n      {books?.length ? (\n        <ul className=\"pl-6 list-disc\">\n          {books.map(({ title, timestamp }) => (\n            <Link href={`/books/${title}`}>\n              <li className=\"tracking-wider text-gray-700 text-lighter\">\n                {title}{\" \"}\n                <span className=\"text-xs text-gray-400\">\n                  {new Date(timestamp).toDateString()}\n                </span>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"tracking-wider text-gray-700 text-lighter\">\n          Nothing here yet. Check back soon, I guess.\n        </p>\n      )}\n    </PageBorder>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const files = fs.readdirSync(\"./books\");\n  const books = files.map((fileName) => {\n    return {\n      timestamp: fileName.slice(0, 10),\n      title: fileName.slice(10).slice(0, -4),\n    };\n  });\n  return {\n    props: {\n      books,\n    },\n  };\n}\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}